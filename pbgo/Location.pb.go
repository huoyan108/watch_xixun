// Code generated by protoc-gen-go.
// source: Location.proto
// DO NOT EDIT!

package Report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 位置坐标类型
type Location_LocationType int32

const (
	Location_EWGS84      Location_LocationType = 0
	Location_EGCJ02      Location_LocationType = 1
	Location_EMobileCell Location_LocationType = 2
	Location_EWifi       Location_LocationType = 3
)

var Location_LocationType_name = map[int32]string{
	0: "EWGS84",
	1: "EGCJ02",
	2: "EMobileCell",
	3: "EWifi",
}
var Location_LocationType_value = map[string]int32{
	"EWGS84":      0,
	"EGCJ02":      1,
	"EMobileCell": 2,
	"EWifi":       3,
}

func (x Location_LocationType) String() string {
	return proto.EnumName(Location_LocationType_name, int32(x))
}
func (Location_LocationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4, 0} }

// 位置信息来源
type Location_FromType int32

const (
	Location_ETerminal Location_FromType = 0
	Location_EPlatform Location_FromType = 1
)

var Location_FromType_name = map[int32]string{
	0: "ETerminal",
	1: "EPlatform",
}
var Location_FromType_value = map[string]int32{
	"ETerminal": 0,
	"EPlatform": 1,
}

func (x Location_FromType) String() string {
	return proto.EnumName(Location_FromType_name, int32(x))
}
func (Location_FromType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4, 1} }

// 84坐标信息
type WGS84 struct {
	LngE6     int32 `protobuf:"varint,1,opt,name=lng_e6,json=lngE6" json:"lng_e6,omitempty"`
	LatE6     int32 `protobuf:"varint,2,opt,name=lat_e6,json=latE6" json:"lat_e6,omitempty"`
	Speed     int32 `protobuf:"varint,3,opt,name=speed" json:"speed,omitempty"`
	Degree    int32 `protobuf:"varint,4,opt,name=degree" json:"degree,omitempty"`
	Precision int32 `protobuf:"varint,5,opt,name=precision" json:"precision,omitempty"`
	Altitude  int32 `protobuf:"varint,6,opt,name=altitude" json:"altitude,omitempty"`
}

func (m *WGS84) Reset()                    { *m = WGS84{} }
func (m *WGS84) String() string            { return proto.CompactTextString(m) }
func (*WGS84) ProtoMessage()               {}
func (*WGS84) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// 02坐标信息
type GCJ02 struct {
	LngE6    int32 `protobuf:"varint,1,opt,name=lng_e6,json=lngE6" json:"lng_e6,omitempty"`
	LatE6    int32 `protobuf:"varint,2,opt,name=lat_e6,json=latE6" json:"lat_e6,omitempty"`
	Altitude int32 `protobuf:"varint,5,opt,name=altitude" json:"altitude,omitempty"`
}

func (m *GCJ02) Reset()                    { *m = GCJ02{} }
func (m *GCJ02) String() string            { return proto.CompactTextString(m) }
func (*GCJ02) ProtoMessage()               {}
func (*GCJ02) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// 基站定位信息
type MobileCell struct {
	Mcc    int32  `protobuf:"varint,1,opt,name=mcc" json:"mcc,omitempty"`
	Mnc    int32  `protobuf:"varint,2,opt,name=mnc" json:"mnc,omitempty"`
	Lac    int32  `protobuf:"varint,3,opt,name=lac" json:"lac,omitempty"`
	Cellid int32  `protobuf:"varint,4,opt,name=cellid" json:"cellid,omitempty"`
	Ss     int32  `protobuf:"varint,5,opt,name=ss" json:"ss,omitempty"`
	Jzxx   string `protobuf:"bytes,6,opt,name=jzxx" json:"jzxx,omitempty"`
}

func (m *MobileCell) Reset()                    { *m = MobileCell{} }
func (m *MobileCell) String() string            { return proto.CompactTextString(m) }
func (*MobileCell) ProtoMessage()               {}
func (*MobileCell) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// wifi定位信息
type Wifi struct {
	Mcc      int32  `protobuf:"varint,1,opt,name=mcc" json:"mcc,omitempty"`
	Addr     int32  `protobuf:"varint,2,opt,name=addr" json:"addr,omitempty"`
	Strength int32  `protobuf:"varint,3,opt,name=strength" json:"strength,omitempty"`
	Wifixx   string `protobuf:"bytes,4,opt,name=wifixx" json:"wifixx,omitempty"`
}

func (m *Wifi) Reset()                    { *m = Wifi{} }
func (m *Wifi) String() string            { return proto.CompactTextString(m) }
func (*Wifi) ProtoMessage()               {}
func (*Wifi) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// 定位信息
type Location struct {
	Locationtype Location_LocationType `protobuf:"varint,1,opt,name=locationtype,enum=Report.Location_LocationType" json:"locationtype,omitempty"`
	From         Location_FromType     `protobuf:"varint,2,opt,name=from,enum=Report.Location_FromType" json:"from,omitempty"`
	Wgs84        *WGS84                `protobuf:"bytes,3,opt,name=wgs84" json:"wgs84,omitempty"`
	Gcj02        *GCJ02                `protobuf:"bytes,4,opt,name=gcj02" json:"gcj02,omitempty"`
	Cells        []*MobileCell         `protobuf:"bytes,5,rep,name=cells" json:"cells,omitempty"`
	Wifis        []*Wifi               `protobuf:"bytes,6,rep,name=wifis" json:"wifis,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Location) GetWgs84() *WGS84 {
	if m != nil {
		return m.Wgs84
	}
	return nil
}

func (m *Location) GetGcj02() *GCJ02 {
	if m != nil {
		return m.Gcj02
	}
	return nil
}

func (m *Location) GetCells() []*MobileCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *Location) GetWifis() []*Wifi {
	if m != nil {
		return m.Wifis
	}
	return nil
}

// 扩展信息
type MobileLocationData struct {
	Battery int32 `protobuf:"varint,1,opt,name=battery" json:"battery,omitempty"`
	Charge  int32 `protobuf:"varint,2,opt,name=charge" json:"charge,omitempty"`
	// 被监护人终端上报位置的原因(0=定位上报“DW”
	// 1=定位频度位置上报)；
	Reason int32 `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
}

func (m *MobileLocationData) Reset()                    { *m = MobileLocationData{} }
func (m *MobileLocationData) String() string            { return proto.CompactTextString(m) }
func (*MobileLocationData) ProtoMessage()               {}
func (*MobileLocationData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

// 终端位置信息
type LocationProtocol struct {
	TimeReq      string              `protobuf:"bytes,1,opt,name=time_req,json=timeReq" json:"time_req,omitempty"`
	SerialNumber string              `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	Tid          string              `protobuf:"bytes,3,opt,name=tid" json:"tid,omitempty"`
	Locations    []*Location         `protobuf:"bytes,4,rep,name=locations" json:"locations,omitempty"`
	Mld          *MobileLocationData `protobuf:"bytes,5,opt,name=mld" json:"mld,omitempty"`
}

func (m *LocationProtocol) Reset()                    { *m = LocationProtocol{} }
func (m *LocationProtocol) String() string            { return proto.CompactTextString(m) }
func (*LocationProtocol) ProtoMessage()               {}
func (*LocationProtocol) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *LocationProtocol) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *LocationProtocol) GetMld() *MobileLocationData {
	if m != nil {
		return m.Mld
	}
	return nil
}

func init() {
	proto.RegisterType((*WGS84)(nil), "Report.WGS84")
	proto.RegisterType((*GCJ02)(nil), "Report.GCJ02")
	proto.RegisterType((*MobileCell)(nil), "Report.MobileCell")
	proto.RegisterType((*Wifi)(nil), "Report.Wifi")
	proto.RegisterType((*Location)(nil), "Report.Location")
	proto.RegisterType((*MobileLocationData)(nil), "Report.MobileLocationData")
	proto.RegisterType((*LocationProtocol)(nil), "Report.LocationProtocol")
	proto.RegisterEnum("Report.Location_LocationType", Location_LocationType_name, Location_LocationType_value)
	proto.RegisterEnum("Report.Location_FromType", Location_FromType_name, Location_FromType_value)
}

func init() { proto.RegisterFile("Location.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 611 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xfd, 0xa5, 0x89, 0xd3, 0x78, 0x9a, 0xe6, 0x67, 0x8d, 0x00, 0xb9, 0x15, 0x48, 0xc8, 0x5c,
	0x7a, 0x80, 0xa8, 0x32, 0x55, 0xd5, 0x2b, 0x94, 0x50, 0x09, 0x01, 0x2a, 0x4b, 0xa5, 0xde, 0x28,
	0x1b, 0x7b, 0xe3, 0xba, 0xf2, 0x9f, 0x74, 0xbd, 0x55, 0x5b, 0x0e, 0x1c, 0xf8, 0x1e, 0x7c, 0x19,
	0x3e, 0x19, 0xbb, 0xb3, 0xeb, 0x24, 0x2d, 0x5c, 0xb8, 0xcd, 0x7b, 0xfb, 0xfc, 0x66, 0x66, 0x67,
	0xd6, 0x30, 0x7a, 0x5f, 0x27, 0x5c, 0xe5, 0x75, 0x35, 0x9e, 0xcb, 0x5a, 0xd5, 0xd8, 0x67, 0x62,
	0x5e, 0x4b, 0x15, 0xfd, 0xec, 0x80, 0x77, 0x7a, 0xf4, 0xf9, 0x60, 0x0f, 0x1f, 0x42, 0xbf, 0xa8,
	0xb2, 0x33, 0xb1, 0x1f, 0x76, 0x9e, 0x76, 0x76, 0x3c, 0xe6, 0x69, 0x34, 0xd9, 0x27, 0x9a, 0x2b,
	0x43, 0xaf, 0x39, 0x9a, 0x2b, 0x4d, 0x3f, 0x00, 0xaf, 0x99, 0x0b, 0x91, 0x86, 0x5d, 0xcb, 0x12,
	0xc0, 0x47, 0xd0, 0x4f, 0x45, 0x26, 0x85, 0x08, 0x7b, 0x44, 0x3b, 0x84, 0x8f, 0xc1, 0x9f, 0x4b,
	0x91, 0xe4, 0x8d, 0x2e, 0x20, 0xf4, 0xe8, 0x68, 0x49, 0xe0, 0x36, 0x0c, 0x78, 0xa1, 0x72, 0x75,
	0x95, 0x8a, 0xb0, 0x4f, 0x87, 0x0b, 0x1c, 0x7d, 0x02, 0xef, 0xe8, 0xf0, 0xdd, 0x6e, 0xfc, 0x8f,
	0xe5, 0xad, 0x5a, 0x7a, 0xf7, 0x2c, 0xbf, 0x03, 0x7c, 0xa8, 0xa7, 0x79, 0x21, 0x0e, 0x45, 0x51,
	0x60, 0x00, 0xdd, 0x32, 0x49, 0x9c, 0xa9, 0x09, 0x89, 0xa9, 0x12, 0xe7, 0x67, 0x42, 0xc3, 0x14,
	0x3c, 0x71, 0xad, 0x9a, 0xd0, 0x34, 0x9a, 0xe8, 0xaf, 0xf3, 0xb4, 0x6d, 0xd4, 0x22, 0x1c, 0xc1,
	0x5a, 0xd3, 0xb8, 0x8c, 0x3a, 0x42, 0x84, 0xde, 0xc5, 0xb7, 0x9b, 0x1b, 0x6a, 0xcb, 0x67, 0x14,
	0x47, 0x5f, 0xa1, 0x77, 0x9a, 0xcf, 0xf2, 0xbf, 0x64, 0xd6, 0x6a, 0x9e, 0xa6, 0xd2, 0xa5, 0xa6,
	0xd8, 0x74, 0xd2, 0x28, 0x29, 0xaa, 0x4c, 0x9d, 0xbb, 0x02, 0x16, 0xd8, 0x54, 0x71, 0xad, 0x9d,
	0xb4, 0x7f, 0x8f, 0xfc, 0x1d, 0x8a, 0x7e, 0x74, 0x61, 0xd0, 0xce, 0x1b, 0x5f, 0xc1, 0xb0, 0x70,
	0xb1, 0xba, 0x9d, 0x0b, 0xca, 0x37, 0x8a, 0x9f, 0x8c, 0xed, 0x02, 0x8c, 0x17, 0x7b, 0xd1, 0x06,
	0x27, 0x5a, 0xc4, 0xee, 0x7c, 0x82, 0x2f, 0xa0, 0x37, 0x93, 0x75, 0x49, 0x75, 0x8d, 0xe2, 0xad,
	0x3f, 0x3e, 0x7d, 0xab, 0x0f, 0xe9, 0x33, 0x92, 0xe1, 0x33, 0xf0, 0xae, 0xb3, 0xe6, 0x60, 0x8f,
	0xea, 0xdd, 0x88, 0x37, 0x5b, 0x3d, 0xed, 0x19, 0xb3, 0x67, 0x46, 0x94, 0x25, 0x17, 0xbb, 0x31,
	0x95, 0xbe, 0x22, 0xa2, 0x69, 0x33, 0x7b, 0x86, 0x3b, 0xe0, 0x99, 0x8b, 0x35, 0x37, 0xda, 0xd5,
	0x22, 0x6c, 0x45, 0xcb, 0xf9, 0x31, 0x2b, 0xc0, 0x48, 0xe7, 0xd4, 0xcd, 0x37, 0xfa, 0xa6, 0x8d,
	0x72, 0xb8, 0xc8, 0xa9, 0x49, 0x66, 0x8f, 0xa2, 0xd7, 0x30, 0x5c, 0x6d, 0x12, 0x01, 0xfa, 0x13,
	0xaa, 0x29, 0xf8, 0x8f, 0x62, 0x4a, 0x1d, 0x74, 0xf0, 0x7f, 0xd8, 0x98, 0x2c, 0x33, 0x04, 0x6b,
	0xe8, 0x83, 0x37, 0x31, 0x46, 0x41, 0x37, 0xda, 0x81, 0x41, 0xdb, 0x2d, 0x6e, 0x82, 0x3f, 0x39,
	0x11, 0xb2, 0xcc, 0x2b, 0x5e, 0x68, 0x0b, 0x03, 0x8f, 0xf5, 0xfa, 0xcd, 0x6a, 0x59, 0x06, 0x9d,
	0xe8, 0x0b, 0xa0, 0x35, 0x69, 0x73, 0xbe, 0xe1, 0x8a, 0x63, 0x08, 0xeb, 0x53, 0xae, 0x94, 0x90,
	0xb7, 0x6e, 0xf0, 0x2d, 0xa4, 0x95, 0x3a, 0xe7, 0x32, 0x13, 0x6e, 0xfc, 0x0e, 0x19, 0x5e, 0x0a,
	0xde, 0xe8, 0x87, 0x63, 0xc7, 0xef, 0x50, 0xf4, 0xab, 0x03, 0x41, 0x6b, 0x7d, 0x6c, 0xde, 0x74,
	0x52, 0x17, 0xb8, 0x05, 0x03, 0x95, 0x97, 0xe2, 0x4c, 0x8a, 0x4b, 0xf2, 0xf7, 0xd9, 0xba, 0xc1,
	0x4c, 0x5c, 0xea, 0x0b, 0xdf, 0x6c, 0x84, 0xcc, 0x79, 0x71, 0x56, 0x5d, 0x95, 0x53, 0x61, 0xb7,
	0xcc, 0x67, 0x43, 0x4b, 0x7e, 0x24, 0xce, 0xec, 0xa4, 0xca, 0xed, 0xa3, 0xf6, 0x99, 0x09, 0x71,
	0x0c, 0x7e, 0xbb, 0x0b, 0x8d, 0x9e, 0x95, 0xb9, 0xdc, 0xe0, 0xfe, 0x02, 0xb0, 0xa5, 0x04, 0x9f,
	0xeb, 0xad, 0x2e, 0x52, 0x7a, 0x02, 0x1b, 0xf1, 0xf6, 0xdd, 0x81, 0xad, 0xde, 0x04, 0x33, 0xb2,
	0x69, 0x9f, 0xfe, 0x46, 0x2f, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x81, 0xfc, 0xa0, 0x64, 0x9f,
	0x04, 0x00, 0x00,
}
